/* /!\ Les tables et relations doivent être créées dans l'ordre et une par une dans la BDD */

/* TABLES ------------------------------- */

/* Un club de tennis */
CREATE TABLE CLUB (
ID_CLUB INT(11) NOT NULL AUTO_INCREMENT,
NOM_CLUB VARCHAR(200) NOT NULL,
HORAIRES_CLUB VARCHAR(2000),
TEL_CLUB CHAR(10) NOT NULL,
EMAIL_CLUB VARCHAR(400) NOT NULL,
ADRESSE_CLUB VARCHAR(2000) NOT NULL,
PRIMARY KEY (ID_CLUB)
);

/* Un terrain de tennis */
CREATE TABLE TERRAIN (
ID_TERRAIN INT(11) AUTO_INCREMENT NOT NULL,
COUVERT_TERRAIN TINYINT(1) NOT NULL DEFAULT 0,
TYPE_TERRAIN ENUM('TB', 'G', 'S') NOT NULL DEFAULT 'S',
ID_CLUB INT(11) NOT NULL,
PRIMARY KEY (ID_TERRAIN),
FOREIGN KEY (ID_CLUB) REFERENCES CLUB(ID_CLUB)
);

/* Un entraineur */
CREATE TABLE ENTRAINEUR (
ID_ENTRAINEUR INT(11) AUTO_INCREMENT NOT NULL,
PRENOM_ENTRAINEUR VARCHAR(200) NOT NULL,
NOM_ENTRAINEUR VARCHAR(200) NOT NULL,
DESCRIPTION_ENTRAINEUR VARCHAR(2000),
AVATAR_ENTRAINEUR VARCHAR(1000),
PRIMARY KEY (ID_ENTRAINEUR)
);

/* Un entrainement de tennis */
CREATE TABLE ENTRAINEMENT (
ID_ENTRAINEMENT INT(11) AUTO_INCREMENT NOT NULL,
HEURE_DEBUT_ENTRAINEMENT DATETIME NOT NULL,
HEURE_FIN_ENTRAINEMENT DATETIME NOT NULL,
NIVEAU_ENTRAINEMENT ENUM('D', 'I', 'A') NOT NULL DEFAULT 'D',
ID_CLUB INT(11),
PRIMARY KEY (ID_ENTRAINEMENT),
FOREIGN KEY (ID_CLUB) REFERENCES CLUB(ID_CLUB)
);

/* Un abonné d'un club de tennis */
CREATE TABLE ABONNE (
ID_ABONNE INT(11) NOT NULL AUTO_INCREMENT,
PRENOM_ABONNE VARCHAR(200) NOT NULL,
NOM_ABONNE VARCHAR(200) NOT NULL,
PSEUDO_ABONNE VARCHAR(200),
EMAIL_ABONNE VARCHAR(400) NOT NULL,
REDUCTION_ABONNE TINYINT(1) NOT NULL DEFAULT 0,
DESCRIPTION_ABONNE VARCHAR(2000),
NIVEAU_ABONNE ENUM('D', 'I', 'A') DEFAULT 'D',
MDP_ABONNE VARCHAR(255) NOT NULL,
ID_CLUB INT(11) NOT NULL DEFAULT 1,
ID_ENTRAINEMENT INT(11),
PRIMARY KEY (ID_ABONNE),
FOREIGN KEY (ID_CLUB) REFERENCES CLUB(ID_CLUB),
FOREIGN KEY (ID_ENTRAINEMENT) REFERENCES ENTRAINEMENT(ID_ENTRAINEMENT)
);

/* Un match de tennis */
CREATE TABLE MATCH_TENNIS (
ID_MATCH INT(11) AUTO_INCREMENT NOT NULL,
HEURE_DEBUT_MATCH DATETIME NOT NULL,
HEURE_FIN_MATCH DATETIME NOT NULL,
COMPETITION_MATCH TINYINT(1) NOT NULL DEFAULT 0,
ID_CLUB INT(11),
ID_TERRAIN INT(11),
PRIMARY KEY (ID_MATCH),
FOREIGN KEY (ID_CLUB) REFERENCES CLUB(ID_CLUB),
FOREIGN KEY (ID_TERRAIN) REFERENCES TERRAIN(ID_TERRAIN)
);

/* un avatar pour un abonné */
CREATE TABLE AVATAR (
ID_AVATAR INT(11) AUTO_INCREMENT NOT NULL,
FILENAME_AVATAR VARCHAR(500) NOT NULL,
ID_ABONNE INT(11) NOT NULL,
PRIMARY KEY (ID_AVATAR),
FOREIGN KEY (ID_ABONNE) REFERENCES ABONNE(ID_ABONNE)
);

/* Une image */
CREATE TABLE IMAGE_PW (
ID_IMAGE INT(11) AUTO_INCREMENT NOT NULL,
FILENAME_IMAGE VARCHAR(500) NOT NULL,
PRIMARY KEY (ID_IMAGE)
);


/* RELATIONS ------------------------------- */

/* Un abonné a perdu un match */
CREATE TABLE ABONNE_PERD_MATCH (
ID_ABONNE INT(11) NOT NULL,
ID_MATCH INT(11) NOT NULL,
PRIMARY KEY (ID_ABONNE, ID_MATCH),
FOREIGN KEY (ID_ABONNE) REFERENCES ABONNE(ID_ABONNE),
FOREIGN KEY (ID_MATCH) REFERENCES MATCH_TENNIS(ID_MATCH)
);

/* Un abonné a gagné un match */
CREATE TABLE ABONNE_GAGNE_MATCH (
ID_ABONNE INT(11) NOT NULL,
ID_MATCH INT(11) NOT NULL,
PRIMARY KEY (ID_ABONNE, ID_MATCH),
FOREIGN KEY (ID_ABONNE) REFERENCES ABONNE(ID_ABONNE),
FOREIGN KEY (ID_MATCH) REFERENCES MATCH_TENNIS(ID_MATCH)
);

/* Un entrainement a lieu n terrains */
CREATE TABLE ENTRAINEMENT_A_LIEU_SUR_TERRAIN (
ID_TERRAIN INT(11) NOT NULL,
ID_ENTRAINEMENT INT(11) NOT NULL,
PRIMARY KEY (ID_TERRAIN, ID_ENTRAINEMENT),
FOREIGN KEY (ID_TERRAIN) REFERENCES TERRAIN(ID_TERRAIN),
FOREIGN KEY (ID_ENTRAINEMENT) REFERENCES ENTRAINEMENT(ID_ENTRAINEMENT)
);

/* Un entrainement a n entraineurs */
CREATE TABLE ENTRAINEMENT_A_ENTRAINEUR (
ID_ENTRAINEMENT INT(11) NOT NULL,
ID_ENTRAINEUR INT(11) NOT NULL,
PRIMARY KEY (ID_ENTRAINEMENT, ID_ENTRAINEUR),
FOREIGN KEY (ID_ENTRAINEMENT) REFERENCES ENTRAINEMENT(ID_ENTRAINEMENT),
FOREIGN KEY (ID_ENTRAINEUR) REFERENCES ENTRAINEUR(ID_ENTRAINEUR)
);

